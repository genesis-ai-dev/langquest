name: Deploy Sync Rules

on:
  push:
    branches: ['main', 'dev']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  validate-sync-rules:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      AUTH_TOKEN: ${{ secrets.POWERSYNC_TOKEN }}
      ORG_ID: ${{ secrets.POWERSYNC_ORG }}
      PROJECT_ID: ${{ secrets.POWERSYNC_PROJECT }}
      INSTANCE_ID: ${{ secrets.POWERSYNC_PROD_INSTANCE }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup-ci

      - name: Run Sync Rules Validate
        run: npx powersync instance sync-rules validate -f supabase/config/sync-rules.yml

      # - name: Validate Sync Rules
      #   id: validate
      #   run: |
      #     OUTPUT=$(npx powersync instance sync-rules validate -f supabase/config/sync-rules.yml)
      #     VALID=$(echo "$OUTPUT" | jq -r '.valid')
      #     if [ "$VALID" != "true" ]; then
      #       echo "::error::Sync rules validation failed: $OUTPUT"
      #       exit 1
      #     fi
      #     echo "status=passed" >> $GITHUB_OUTPUT
      #     echo "output=$OUTPUT" >> $GITHUB_OUTPUT

  deploy-sync-rules:
    runs-on: ubuntu-latest
    # needs: validate-sync-rules
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup-ci

      - name: Deploy Sync Rules
        env:
          AUTH_TOKEN: ${{ secrets.POWERSYNC_TOKEN }}
          ORG_ID: ${{ secrets.POWERSYNC_ORG }}
          PROJECT_ID: ${{ secrets.POWERSYNC_PROJECT }}
          INSTANCE_ID: ${{ secrets.POWERSYNC_PROD_INSTANCE }}
        run: npx powersync instance sync-rules deploy -f supabase/config/sync-rules.yml -s
