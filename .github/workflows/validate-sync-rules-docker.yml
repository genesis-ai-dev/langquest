name: Validate Sync Rules with Docker

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths: ['supabase/config/sync-rules.yml']
  push:
    branches: ['dev']
    paths: ['supabase/config/sync-rules.yml']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  validate-sync-rules:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      PS_PORT: 8080
      PS_API_TOKEN: use_a_better_token_in_production
    steps:
      - uses: actions/checkout@v4

      - name: Fetch Supabase branch info
        id: supabase-branch
        run: |
          BRANCH_DATA=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_ACCESS_TOKEN }}" \
            https://api.supabase.com/v1/projects/${{ secrets.SUPABASE_PRODUCTION_PROJECT_ID }}/branches)

          BRANCH_ID=$(echo $BRANCH_DATA | jq -r --arg branch "${{ env.BRANCH_NAME }}" '.[] | select(.git_branch == $branch) | .id')
          echo "branch_id=$BRANCH_ID" >> $GITHUB_OUTPUT

          if [ -n "$BRANCH_ID" ]; then
            BRANCH_DETAILS=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.SUPABASE_ACCESS_TOKEN }}" \
              "https://api.supabase.com/v1/branches/$BRANCH_ID")
            
            # Extract database connection details
            DB_HOST=$(echo $BRANCH_DETAILS | jq -r .db_host)
            DB_PORT=$(echo $BRANCH_DETAILS | jq -r .db_port)
            DB_USER=$(echo $BRANCH_DETAILS | jq -r .db_user)
            DB_PASS=$(echo $BRANCH_DETAILS | jq -r .db_pass)
            
            # Construct database URL
            DB_URL="postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/postgres"
            echo "PS_DATA_SOURCE_URI=${DB_URL}" >> $GITHUB_ENV
          else
            echo "::warning::No Supabase branch found matching git branch '${{ env.BRANCH_NAME }}', using default database URL."
            echo "PS_DATA_SOURCE_URI=postgresql://postgres:postgres@db:5432/postgres" >> $GITHUB_ENV
          fi

      - name: Run PowerSync with Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: ./supabase/docker-compose.yml
          up-flags: -d
          down-flags: -v
          services: powersync

      - name: Wait for PowerSync to startup
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:${PS_PORT}/probes/liveness > /dev/null; then
              echo "PowerSync is ready"
              exit 0
            fi
            echo "Waiting for PowerSync to start... ($i/30)"
            sleep 2
          done
          echo "PowerSync failed to start."
          exit 1

      - name: Validate Sync Rules
        id: validate
        run: |
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $PS_API_TOKEN" \
            -H "Content-Type: application/yaml" \
            --data-binary "@supabase/config/sync-rules.yml" \
            http://localhost:${PS_PORT}/api/sync-rules/v1/validate)

          # Parse the JSON response
          VALID=$(echo "$RESPONSE" | jq -r '.valid')
          ERRORS=$(echo "$RESPONSE" | jq -r '.errors[]')

          if [ "$VALID" = "true" ]; then
            echo "status=passed" >> $GITHUB_OUTPUT
            echo "output=$RESPONSE" >> $GITHUB_OUTPUT
          else
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "output=$RESPONSE" >> $GITHUB_OUTPUT
            echo "$ERRORS"
            exit 1
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.validate.outputs.status == 'passed'
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: ✅ PowerSync sync rules validation passed.
          comment-tag: validation

      - name: Comment on PR Failure
        if: github.event_name == 'pull_request' && failure() && steps.validate.outputs.status == 'failed'
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            ❌ PowerSync sync rules validation failed.

            ```
            ${{ steps.validate.outputs.output }}
            ```

            Please fix the issues before merging.
          comment-tag: validation
