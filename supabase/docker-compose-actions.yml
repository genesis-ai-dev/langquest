name: powersync

services:
  mongo:
    image: mongo:7.0
    command: --replSet rs0 --bind_ip_all --quiet
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongo_storage:/data/db

  # Initializes the MongoDB replica set. This service will not usually be actively running
  mongo-rs-init:
    image: mongo:7.0
    depends_on:
      - mongo
    restart: on-failure
    entrypoint:
      - bash
      - -c
      - 'mongosh --host mongo:27017 --eval ''try{rs.status().ok && quit(0)} catch {} rs.initiate({_id: "rs0", version: 1, members: [{ _id: 0, host : "mongo:27017" }]})'''

  powersync:
    restart: unless-stopped
    image: journeyapps/powersync-service:latest
    command: ['start', '-r', 'unified']
    environment:
      POWERSYNC_CONFIG_PATH: /config/powersync-actions.yml
      NODE_OPTIONS: --max-old-space-size=1000
      PS_SUPABASE_JWT_SECRET: ${PS_SUPABASE_JWT_SECRET}
      PS_DATA_SOURCE_URI: ${PS_DATA_SOURCE_URI}
      PS_MONGO_URI: mongodb://mongo:27017/powersync_demo
      PS_PORT: ${PS_PORT}
    develop:
      watch:
        - action: sync+restart
          path: ./config
          target: /config
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "fetch('http://localhost:${PS_PORT}/probes/liveness').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"
        ]
      interval: 5s
      timeout: 1s
      retries: 15
    ports:
      - ${PS_PORT}:${PS_PORT}
    depends_on:
      mongo-rs-init:
        condition: service_completed_successfully
    volumes:
      - ./config:/config
    network_mode: 'service:warp'

  # demo-client:
  #   build:
  #     dockerfile: demo-client.dockerfile
  #     args:
  #       VITE_SUPABASE_URL: ${EXPO_PUBLIC_SUPABASE_URL}
  #       VITE_SUPABASE_ANON_KEY: ${EXPO_PUBLIC_SUPABASE_ANON_KEY}
  #       VITE_POWERSYNC_URL: ${EXPO_PUBLIC_POWERSYNC_URL}
  #   ports:
  #     - 4170:4173

networks:
  default:
    name: powersync_network
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: fd00::/80
          gateway: fd00::1

volumes:
  mongo_storage:
